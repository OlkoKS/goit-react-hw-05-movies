{"version":3,"file":"static/js/549.fe0f009d.chunk.js","mappings":"uOAEMA,EAAkBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iEAM5BC,EAAcH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6CAIxBG,EAAcL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sFAOvBK,EAAaP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+B,SCXdO,EAAY,SAAHC,GAUf,IAADC,EAAAD,EATJE,MACEC,EAAcF,EAAdE,eACAC,EAAKH,EAALG,MACAC,EAAMJ,EAANI,OACAC,EAAQL,EAARK,SACAC,EAAWN,EAAXM,YACAC,EAAYP,EAAZO,aACAC,EAAYR,EAAZQ,aAGIC,EAAYL,EAAOM,KAAI,SAAAC,GAAO,OAAAA,EAAJC,IAAe,IAAEC,KAAK,MACtD,OACEC,EAAAA,EAAAA,MAAC1B,EAAe,CAAA2B,SAAA,EACdC,EAAAA,EAAAA,KAACxB,EAAW,CACVyB,IACEX,EAAW,mCAAAY,OAC4BZ,GACnCa,EAENC,IAAKjB,GAASD,KAEhBY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKZ,GAASD,IACbK,IACCO,EAAAA,EAAAA,MAACpB,EAAW,CAAAqB,SAAA,CAAC,kBACGC,EAAAA,EAAAA,KAACpB,EAAU,CAAAmB,SAAER,QAG/BO,EAAAA,EAAAA,MAACpB,EAAW,CAAAqB,SAAA,CAAC,eACAC,EAAAA,EAAAA,KAACpB,EAAU,CAAAmB,SAAEP,QAE1BM,EAAAA,EAAAA,MAACpB,EAAW,CAAAqB,SAAA,CAAC,cACDC,EAAAA,EAAAA,KAACpB,EAAU,CAAAmB,SAAEV,QAEzBS,EAAAA,EAAAA,MAACpB,EAAW,CAAAqB,SAAA,CAAC,YACHC,EAAAA,EAAAA,KAACpB,EAAU,CAAAmB,SAAEN,YAK/B,E,mCC1CMY,GAAgBhC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAPjC,CAAeC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mIAQ/BG,EAAcL,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4DAyB7B,EApBqB,WAAO,IAADgC,EAAAC,EACzBC,GAAkCC,EAAAA,EAAAA,MAA1BzB,EAAKwB,EAALxB,MAAO0B,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAClBC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,QAA2B,QAArBT,EAAe,QAAfC,EAACK,EAASI,aAAK,IAAAT,OAAA,EAAdA,EAAgBU,YAAI,IAAAX,EAAAA,EAAI,KAClD,OACET,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAApB,SAAA,EACEC,EAAAA,EAAAA,KAACK,EAAa,CAACe,GAAIL,EAAWM,QAAQtB,SAAC,YACtCY,IAAWX,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,IAClBV,IAASZ,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BACZd,IAASe,EAAAA,EAAAA,KAAClB,EAAS,CAACG,MAAOA,KAC5Be,EAAAA,EAAAA,KAACtB,EAAW,CAAAqB,SAAC,4BACbC,EAAAA,EAAAA,KAACK,EAAa,CAACe,GAAG,OAAMrB,SAAC,UACzBC,EAAAA,EAAAA,KAACK,EAAa,CAACe,GAAG,UAASrB,SAAC,aAC5BC,EAAAA,EAAAA,KAACuB,EAAAA,SAAQ,CAACC,UAAUxB,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,IAAIvB,UAC7BC,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,QAIf,C","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n  padding: 20px 60px;\n  display: flex;\n  gap: 40px;\n`;\n\nconst StyledImage = styled.img`\n  width: 400px;\n  height: 600px;\n`;\nconst StyledTitle = styled.h2`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  font-size: 24px;\n`;\n\nconst StyledText = styled.p`\n  font-weight: 400;\n`;\n\nexport { StyledContainer, StyledImage, StyledTitle, StyledText };\n","import notFoundImage from '../../image/not_found_image.jpg';\nimport {\n  StyledContainer,\n  StyledImage,\n  StyledText,\n  StyledTitle,\n} from './MovieInfo.styled';\n\nexport const MovieInfo = ({\n  movie: {\n    original_title,\n    title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  },\n}) => {\n  const allGenres = genres.map(({ name }) => name).join(', ');\n  return (\n    <StyledContainer>\n      <StyledImage\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n            : notFoundImage\n        }\n        alt={title || original_title}\n      />\n      <div>\n        <h1>{title || original_title}</h1>\n        {release_date && (\n          <StyledTitle>\n            Release date: <StyledText>{release_date}</StyledText>\n          </StyledTitle>\n        )}\n        <StyledTitle>\n          User score:<StyledText>{vote_average}</StyledText>\n        </StyledTitle>\n        <StyledTitle>\n          Overview: <StyledText>{overview}</StyledText>\n        </StyledTitle>\n        <StyledTitle>\n          Genres: <StyledText>{allGenres}</StyledText>\n        </StyledTitle>\n      </div>\n    </StyledContainer>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useFetchMovieDetails } from 'hooks';\nimport { Suspense, useRef } from 'react';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledNavLink = styled(NavLink)`\n  display: inline-block;\n  margin: 40px 0 20px 60px;\n  font-weight: 600;\n  font-size: 24px;\n  color: rgb(14 84 70);\n`;\n\nconst StyledTitle = styled.h2`\n  margin: 40px 0 -16px 60px;\n  font-size: 28px;\n`;\n\nconst MovieDetails = () => {\n  const { movie, loading, error } = useFetchMovieDetails();\n  const location = useLocation();\n  const goBackLink = useRef(location.state?.from ?? '/');\n  return (\n    <>\n      <StyledNavLink to={goBackLink.current}>Go back</StyledNavLink>\n      {loading && <Loader />}\n      {error && <p>Something went wrong...</p>}\n      {movie && <MovieInfo movie={movie} />}\n      <StyledTitle>Additional information</StyledTitle>\n      <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n      <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledContainer","styled","_templateObject","_taggedTemplateLiteral","StyledImage","_templateObject2","StyledTitle","_templateObject3","StyledText","_templateObject4","MovieInfo","_ref","_ref$movie","movie","original_title","title","genres","overview","poster_path","release_date","vote_average","allGenres","map","_ref2","name","join","_jsxs","children","_jsx","src","concat","notFoundImage","alt","StyledNavLink","NavLink","_location$state$from","_location$state","_useFetchMovieDetails","useFetchMovieDetails","loading","error","location","useLocation","goBackLink","useRef","state","from","_Fragment","to","current","Loader","Suspense","fallback","Outlet"],"sourceRoot":""}