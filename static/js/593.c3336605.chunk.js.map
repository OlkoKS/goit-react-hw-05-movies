{"version":3,"file":"static/js/593.c3336605.chunk.js","mappings":"6NAEMA,EAAaC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yLActBC,EAAaH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sEAMrBG,EAAiBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6CAI3BK,EAAcP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8D,SCjBjBO,EAAY,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAACf,EAAU,CAAAgB,SACRJ,EAAOK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAK,OACzCP,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaN,GAAMO,MAAO,CAAEC,KAAMd,GAAWG,UACnDY,EAAAA,EAAAA,MAAA,MAAAZ,SAAA,EACED,EAAAA,EAAAA,KAACT,EAAc,CAAAU,UACbD,EAAAA,EAAAA,KAACP,EAAW,CACVqB,IACET,EAAW,mCAAAK,OAC4BL,GACnCU,EAENC,IAAKT,GAASD,OAGlBN,EAAAA,EAAAA,KAACX,EAAU,CAAAY,SAAEM,GAASD,QAZiCF,EAcpD,KAIf,C,kIC9BMa,EAAa/B,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qGAOxB8B,EAAehC,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kMAa5B+B,EAAcjC,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8I,SCnBnBgC,EAAa,SAAHxB,GAAsB,IAAhByB,EAAQzB,EAARyB,SAC3BC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAatB,OACEX,EAAAA,EAAAA,MAACI,EAAU,CAACI,SARO,SAAAO,GAEnB,GADAA,EAAIC,iBACU,KAAVH,EAAc,OAAOI,MAAM,8BAC/BT,EAASK,GACTC,EAAS,GACX,EAGqC1B,SAAA,EACjCD,EAAAA,EAAAA,KAACmB,EAAW,CACVY,KAAK,OACLzB,KAAK,QACL0B,MAAON,EACPO,SAjBe,SAAH9B,GAA+B,IAAf6B,EAAK7B,EAAf+B,OAAUF,MAChCL,EAASK,EAAMG,OACjB,EAgBMC,WAAW,KAEbpC,EAAAA,EAAAA,KAACkB,EAAY,CAACa,KAAK,SAAQ9B,SAAC,aAGlC,E,SCZA,EAZe,WACb,IAAAoC,GAAiDC,EAAAA,EAAAA,MAAzCzC,EAAMwC,EAANxC,OAAQ0C,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aAChC,OACE5B,EAAAA,EAAAA,MAAA6B,EAAAA,SAAA,CAAAzC,SAAA,EACED,EAAAA,EAAAA,KAACoB,EAAU,CAACC,SAAUoB,IACrBF,IAAWvC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,IAClBH,IAASxC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4BACZJ,EAAO+C,OAAS,IAAK5C,EAAAA,EAAAA,KAACL,EAAAA,EAAS,CAACE,OAAQA,MAG/C,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledList = styled.ul`\n  list-style: none;\n  margin: 64px auto;\n  justify-content: center;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 32px;\n\n  & > * {\n    width: 400px;\n  }\n`;\n\nconst StyledText = styled.p`\n  margin: 12px;\n  font-size: 24px;\n  text-align: center;\n`;\n\nconst ImageContainer = styled.div`\n  width: 400px;\n  height: 600px;\n`;\nconst StyledImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nexport { StyledList, StyledText, ImageContainer, StyledImage };\n","import notFoundImage from '../../image/not_found_image.jpg';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  ImageContainer,\n  StyledImage,\n  StyledList,\n  StyledText,\n} from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(({ id, poster_path, name, title }) => (\n        <Link to={`/movies/${id}`} state={{ from: location }} key={id}>\n          <li>\n            <ImageContainer>\n              <StyledImage\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n                    : notFoundImage\n                }\n                alt={title || name}\n              />\n            </ImageContainer>\n            <StyledText>{title || name}</StyledText>\n          </li>\n        </Link>\n      ))}\n    </StyledList>\n  );\n};\n","import styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 48px;\n`;\n\nconst SearchButton = styled.button`\n  width: 200px;\n  height: 60px;\n  padding: 0 10px;\n  font-size: 32px;\n  background-color: #7dcfbb;\n  border: none;\n  border-radius: 4px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledInput = styled.input`\n  width: 600px;\n  height: 60px;\n  padding: 0 24px;\n  font-size: 28px;\n  border: none;\n  outline: none;\n  border-radius: 4px;\n`;\n\nexport { StyledForm, SearchButton, StyledInput };\n","import { useState } from 'react';\nimport { SearchButton, StyledForm, StyledInput } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value.trim());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (query === '') return alert('Please enter your request!');\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledInput\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        onChange={handleChange}\n        autoFocus={true}\n      />\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </StyledForm>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useFetchMoviesByQuery } from 'hooks';\n\nconst Movies = () => {\n  const { movies, loading, error, handleSubmit } = useFetchMoviesByQuery();\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n      {loading && <Loader />}\n      {error && <p>Something went wrong...</p>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","StyledText","_templateObject2","ImageContainer","_templateObject3","StyledImage","_templateObject4","MovieList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","poster_path","name","title","Link","to","concat","state","from","_jsxs","src","notFoundImage","alt","StyledForm","SearchButton","StyledInput","SearchForm","onSubmit","_useState","useState","_useState2","_slicedToArray","query","setQuery","evt","preventDefault","alert","type","value","onChange","target","trim","autoFocus","_useFetchMoviesByQuer","useFetchMoviesByQuery","loading","error","handleSubmit","_Fragment","Loader","length"],"sourceRoot":""}